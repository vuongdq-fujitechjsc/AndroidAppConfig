version: 2.1

parameters:
  GHA_Actor:
    type: string
    default: ""
  GHA_Action:
    type: string
    default: ""
  GHA_Event:
    type: string
    default: ""
  GHA_Meta: 
    type: enum
    enum: ["build", "deploy-st", "deploy-product"]
    default: "build"

references:

  ## Cache
  

  ## Keys
  # Android Store Key JKS
  decode_android_key: &decode_android_key
    run:
      name: Decode Android Store Key JKS
      command: "echo $ANDROID_STORE_KEY_JKS | base64 --decode > android-store-key.jks"

  # Google Cloud Service Key
  # decode_google_cloud_key: &decode_google_cloud_key
  #   run:
  #     name: Decode Google Cloud Service Key
  #     command: "echo $PLAY_STORE_CREDENTIAL | base64 --decode > play-store-credential.json"

jobs:
  ## Build & Unit test
  build:
  #   docker:
  #     - image: cimg/android:2022.09.2-browsers
  #   steps:
  #     - checkout
  #     - run:
  #         name: "Install"
  #         command: "scripts/installDependencies.sh"
  #     - *decode_android_key
  #     - run:
  #         name: "Build"
  #         command: "bundle exec fastlane build_and_test build_flavor:'product' build_type:'release'"
    docker:
      - image: cimg/android:2022.09.2-browsers
    steps:
      - checkout
      - *decode_android_key
      # - *decode_google_cloud_key
      - run:
          name: "Install"
          command: "scripts/installDependencies.sh"
      - run:
          name: "Generate AAB and upload to Google Store"
          command: "bundle exec fastlane deploy build_flavor:'st' build_type:'release'"
      - run:
          name: Creating Dummy Artifacts
          command: |
            ls;
            cd app/build/outputs/bundle/stRelease;
            ls;
      - store_artifacts:
          name: "Store AAB file to Artifact"
          path: /app/build/outputs/bundle/stRelease/app-st-release.aab
          destination: AAB-file

  ## Deploy ST
  deploy-st:
    docker:
      - image: cimg/android:2022.09.2-browsers
    steps:
      - checkout
      - *decode_android_key
      # - *decode_google_cloud_key
      - run:
          name: "Install"
          command: "scripts/installDependencies.sh"
      - run:
          name: "Generate AAB and upload to Google Store"
          command: "bundle exec fastlane deploy build_flavor:'staging' build_type:'release'"
      - store_artifacts:
          name: "Store AAB file to Artifact"
          path: /app/build/outputs/bundle/productRelease
          destination: app-dev-release.aab

  ## Deploy Product
  deploy-product:
    docker:
      - image: cimg/android:2022.09.2-browsers
    steps:
      - checkout
      - *decode_android_key
      # - *decode_google_cloud_key
      - run:
          name: "Install"
          command: "scripts/installDependencies.sh"
      - run:
          name: "Generate AAB and upload to Google Store"
          command: "bundle exec fastlane deploy build_flavor:'product' build_type:'release'"
      - store_artifacts:
          name: "Store AAB file to Artifact"
          path: /app/build/outputs/bundle/productRelease/app-product-release.aab

workflows:
  # Workflow: build for any PR 
  build:
    when: 
      and:
          - equal: [ "build", << pipeline.parameters.GHA_Meta >> ]
    jobs:
      - build
      
      
  # Workflow: deploy to testflight of ST environment  
  deploy-st:
    when: 
     and:
        - equal: [ "deploy-st", << pipeline.parameters.GHA_Meta >> ]
    jobs:
      - deploy-st

  # Workflow: deploy to testflight of Product environment
  deploy-product:
    when: 
     and:
        - equal: [ "deploy-product", << pipeline.parameters.GHA_Meta >> ]
    jobs:
      - deploy-product
  